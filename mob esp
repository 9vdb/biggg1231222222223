-- Kiriot22 ESP modified for workspace.Enemies

--Settings--
local ESP = {
    Enabled = false,
    Boxes = true,
    BoxShift = CFrame.new(0,-1.5,0),
    BoxSize = Vector3.new(4,6,0),
    Color = Color3.fromRGB(255,0,0), -- mob color
    HighlightColor = Color3.new(1,1,1),
    HighlightEnabled = false,
    FaceCamera = false,
    Names = true,
    Thickness = 2,
    HrpName = "HumanoidRootPart",
    ScreenScale = 1,
    Objects = setmetatable({}, {__mode="kv"}),
    Overrides = {}
}
getgenv().shared.ESP = ESP

--Declarations--
local cam = workspace.CurrentCamera
local RunService = game:GetService("RunService")

--Functions--
local function WorldToViewportPoint(...)
    local a,b = cam.WorldToViewportPoint(...)
    a = Vector3.new(a.X * ESP.ScreenScale, a.Y * ESP.ScreenScale, a.Z)
    return a,b
end

local function Draw(obj, props)
    local new = Drawing.new(obj)
    for i,v in pairs(props or {}) do new[i] = v end
    return new
end

-- Disable team checks for mobs
function ESP:IsTeamMate(p)
    return false
end

-- Get color (always ESP.Color for mobs)
function ESP:GetColor(obj)
    return self.Color
end

-- Add an object to ESP
function ESP:Add(obj)
    if not obj.Parent then return end

    local primary = obj:FindFirstChild(ESP.HrpName) or obj:FindFirstChildWhichIsA("BasePart")
    if not primary then return end

    local box = setmetatable({
        Name = obj.Name,
        Type = "Box",
        Color = ESP.Color,
        Size = ESP.BoxSize,
        Object = obj,
        PrimaryPart = primary,
        Components = {}
    }, {__index = {
        Update = function(self)
            if not self.PrimaryPart then return end
            local cf = self.PrimaryPart.CFrame
            if ESP.FaceCamera then cf = CFrame.new(cf.p, cf.p - cam.CFrame.lookVector) end

            if ESP.Boxes then
                local TopLeft, Vis1 = WorldToViewportPoint(cf * ESP.BoxShift * CFrame.new(self.Size.X/2,self.Size.Y/2,0).p)
                local TopRight, Vis2 = WorldToViewportPoint(cf * ESP.BoxShift * CFrame.new(-self.Size.X/2,self.Size.Y/2,0).p)
                local BottomLeft, Vis3 = WorldToViewportPoint(cf * ESP.BoxShift * CFrame.new(self.Size.X/2,-self.Size.Y/2,0).p)
                local BottomRight, Vis4 = WorldToViewportPoint(cf * ESP.BoxShift * CFrame.new(-self.Size.X/2,-self.Size.Y/2,0).p)

                if self.Components.Quad then
                    if Vis1 or Vis2 or Vis3 or Vis4 then
                        self.Components.Quad.Visible = true
                        self.Components.Quad.PointA = Vector2.new(TopRight.X, TopRight.Y)
                        self.Components.Quad.PointB = Vector2.new(TopLeft.X, TopLeft.Y)
                        self.Components.Quad.PointC = Vector2.new(BottomLeft.X, BottomLeft.Y)
                        self.Components.Quad.PointD = Vector2.new(BottomRight.X, BottomRight.Y)
                        self.Components.Quad.Color = self.Color
                    else
                        self.Components.Quad.Visible = false
                    end
                end
            end

            if ESP.Names then
                local TagPos, Vis5 = WorldToViewportPoint(cf * ESP.BoxShift * CFrame.new(0,self.Size.Y/2,0).p)
                if Vis5 then
                    self.Components.Name.Visible = true
                    self.Components.Name.Position = Vector2.new(TagPos.X, TagPos.Y)
                    self.Components.Name.Text = self.Name
                    self.Components.Name.Color = self.Color
                else
                    self.Components.Name.Visible = false
                end
            end
        end
    }})

    box.Components["Quad"] = Draw("Quad", {Thickness = ESP.Thickness, Color = box.Color, Filled = false, Visible = ESP.Enabled})
    box.Components["Name"] = Draw("Text", {Text = box.Name, Color = box.Color, Center = true, Outline = true, Size = 19, Visible = ESP.Enabled})

    ESP.Objects[obj] = box
    obj.AncestryChanged:Connect(function(_, parent)
        if not parent then ESP.Objects[obj] = nil end
    end)

    return box
end

-- Add all mobs in workspace.Enemies
workspace.Enemies.ChildAdded:Connect(function(child)
    ESP:Add(child)
end)
for _,v in pairs(workspace.Enemies:GetChildren()) do
    ESP:Add(v)
end

-- Update loop
RunService.RenderStepped:Connect(function()
    cam = workspace.CurrentCamera
    if ESP.Enabled then
        for _,v in pairs(ESP.Objects) do
            local s,e = pcall(v.Update, v)
            if not s then warn("[ESP Error]", e, v.Object:GetFullName()) end
        end
    end
end)

return ESP
